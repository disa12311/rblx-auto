# === rblx_bot.py - Phi√™n b·∫£n t·ªëi ∆∞u to√†n b·ªô ===

import discord
from discord.commands import Option
from discord.ext import commands
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
import os

# --- C·∫§U H√åNH ---
# L·∫•y token t·ª´ bi·∫øn m√¥i tr∆∞·ªùng c·ªßa Railway, an to√†n v√† ƒë√∫ng chu·∫©n.
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
WEBSITE_URL = "https://rblx.earth/"

# --- KH·ªûI T·∫†O SELENIUM ---
# C·∫•u h√¨nh c√°c t√πy ch·ªçn cho Chrome ƒë·ªÉ ch·∫°y ·ªïn ƒë·ªãnh trong m√¥i tr∆∞·ªùng Docker/Server
options = webdriver.ChromeOptions()
options.add_argument("--headless")
options.add_argument("--no-sandbox")
options.add_argument("--disable-dev-shm-usage")
options.add_argument("--disable-gpu")
options.add_argument("window-size=1920,1080")

# Kh·ªüi t·∫°o driver, Selenium s·∫Ω t·ª± t√¨m chromedriver trong PATH c·ªßa container
driver = webdriver.Chrome(options=options)

# --- KH·ªûI T·∫†O BOT DISCORD ---
intents = discord.Intents.default()
bot = commands.Bot(intents=intents)

# --- C√ÅC H√ÄM X·ª¨ L√ù L·ªñI ---
async def handle_error(ctx: discord.ApplicationContext, error: Exception, command_name: str):
    """H√†m x·ª≠ l√Ω l·ªói t·∫≠p trung ƒë·ªÉ tr√°nh l·∫∑p code v√† cho tr·∫£i nghi·ªám ng∆∞·ªùi d√πng t·ªët h∆°n."""
    # Ghi log l·ªói chi ti·∫øt ƒë·ªÉ ch·ªß bot debug tr√™n Railway
    print(f"CRITICAL ERROR in /{command_name}: {error}")
    # G·ª≠i m·ªôt th√¥ng b√°o th√¢n thi·ªán v√† ng·∫Øn g·ªçn ƒë·∫øn ng∆∞·ªùi d√πng tr√™n Discord
    await ctx.edit(content=(
        f"‚ùå **ƒê√£ c√≥ l·ªói x·∫£y ra khi th·ª±c thi l·ªánh `/{command_name}`!**\n"
        "Vui l√≤ng th·ª≠ l·∫°i sau. N·∫øu l·ªói v·∫´n ti·∫øp di·ªÖn, c√≥ th·ªÉ website ƒë√£ thay ƒë·ªïi ho·∫∑c bot ƒëang ƒë∆∞·ª£c b·∫£o tr√¨."
    ))

# --- S·ª∞ KI·ªÜN KHI BOT S·∫¥N S√ÄNG ---
@bot.event
async def on_ready():
    print(f'Bot ƒë√£ ƒëƒÉng nh·∫≠p v·ªõi t√™n: {bot.user}')
    print('Bot ƒë√£ s·∫µn s√†ng nh·∫≠n l·ªánh. Tr·∫°ng th√°i: Online 24/7 tr√™n Railway.')

# --- C√ÅC L·ªÜNH G·∫†CH CH√âO C·ª¶A BOT ---

@bot.slash_command(name="start", description="M·ªü rblx.earth v√† li√™n k·∫øt t√†i kho·∫£n Roblox c·ªßa b·∫°n.")
async def start_rblx(
    ctx: discord.ApplicationContext,
    roblox_username: Option(str, "T√™n ng∆∞·ªùi d√πng Roblox c·ªßa b·∫°n ƒë·ªÉ li√™n k·∫øt.", required=True)
):
    await ctx.defer()
    try:
        if not roblox_username or not isinstance(roblox_username, str):
            await ctx.edit(content=f"‚ùå L·ªói: T√™n ng∆∞·ªùi d√πng Roblox kh√¥ng h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i.")
            return

        print(f"Executing /start for user: {roblox_username}")
        await ctx.followup.send(f"ƒêang m·ªü `{WEBSITE_URL}` v√† chu·∫©n b·ªã li√™n k·∫øt...")

        driver.get(WEBSITE_URL)
        user_field = WebDriverWait(driver, 15).until(
            EC.presence_of_element_located((By.XPATH, '//input[@placeholder="Enter your ROBLOX username"]'))
        )
        
        driver.execute_script("arguments[0].value = arguments[1];", user_field, roblox_username)
        
        link_button = driver.find_element(By.XPATH, '//button[contains(text(), "Link Account")]')
        link_button.click()

        WebDriverWait(driver, 15).until(
            EC.presence_of_element_located((By.CLASS_NAME, "user-balance"))
        )
        await ctx.edit(content=f"‚úÖ **Th√†nh c√¥ng!** ƒê√£ li√™n k·∫øt t√†i kho·∫£n `{roblox_username}`.")

    except Exception as e:
        await handle_error(ctx, e, "start")

@bot.slash_command(name="promo", description="Nh·∫≠p m√£ khuy·∫øn m√£i (promocode) tr√™n rblx.earth.")
async def enter_promo(
    ctx: discord.ApplicationContext,
    code: Option(str, "M√£ khuy·∫øn m√£i b·∫°n mu·ªën nh·∫≠p.", required=True)
):
    await ctx.defer()
    try:
        print(f"Executing /promo with code: {code}")
        await ctx.followup.send("ƒêang ƒëi·ªÅu h∆∞·ªõng ƒë·∫øn trang `Promocodes`...")
        
        promo_page_link = driver.find_element(By.XPATH, '//a[contains(@href, "/promocodes")]')
        promo_page_link.click()

        promo_field = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.XPATH, '//input[@placeholder="Enter a promocode"]'))
        )
        driver.execute_script("arguments[0].value = arguments[1];", promo_field, code)
        
        redeem_button = driver.find_element(By.XPATH, '//button[contains(text(), "Redeem")]')
        redeem_button.click()

        result_popup = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, 'swal2-title'))
        )
        await ctx.edit(content=f"‚úÖ **K·∫øt qu·∫£ nh·∫≠p m√£ `{code}`:** {result_popup.text}")
        
    except Exception as e:
        await handle_error(ctx, e, "promo")

@bot.slash_command(name="balance", description="Ki·ªÉm tra s·ªë d∆∞ Robux hi·ªán t·∫°i c·ªßa b·∫°n tr√™n rblx.earth.")
async def check_balance(ctx: discord.ApplicationContext):
    await ctx.defer()
    try:
        print("Executing /balance")
        # ƒêi ƒë·∫øn trang ch·ªß ƒë·ªÉ ƒë·∫£m b·∫£o c√≥ th·ªÉ th·∫•y s·ªë d∆∞
        driver.get(f"{WEBSITE_URL}earn")
        
        balance_element = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CLASS_NAME, "user-balance"))
        )
        balance_text = balance_element.find_element(By.TAG_NAME, "span").text
        
        await ctx.edit(content=f"üí∞ **S·ªë d∆∞ hi·ªán t·∫°i c·ªßa b·∫°n l√†:** `{balance_text}`")

    except Exception as e:
        await handle_error(ctx, e, "balance")

# --- CH·∫†Y BOT ---
if DISCORD_TOKEN:
    bot.run(DISCORD_TOKEN)
else:
    print("CRITICAL: Bi·∫øn m√¥i tr∆∞·ªùng DISCORD_TOKEN ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p.")
